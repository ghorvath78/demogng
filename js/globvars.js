//
// Copyright 2016-2017 by Bernd Fritzke, All Rights Reserved
//
"use strict";

var glob3D = {
    cubes : [],
    scene : "",
    camera : "",
    renderer : "",
    cubeno : 0
};

var glob = {
    // model running?
    speed: 0,
    showSpeed: false,
    running: false,
    demoRunning: false,
    autoRestartMode: false,
    singleStepMode: false,
    isgrabbing: false, // currently in grabbing action?
    isPDgrabbing: false, // currently in PD grabbing action?
    grabbedNode: undefined,

    // m
    shift: false,
    control: false,
    alt: false,
    touch: false,
    realTouchContact: false,
    touchMoved: false, // used to detect real touchclicks from wrong ones
    touchUsed: false, // true if this touch movement was already used
    touchpos: [], // vector of touch positions
    showTouchHelp: false,
    touchHelpPage: 0,
    viewModes: ["desktop", "embedded"],
    viewMode: "desktop",
    prev_discrete_num: 0,
    modelChanged: false,
    oChange: 0,
    shouldStop: false,
    //shouldStopAfterInsert: false,
    mostRecentBMU: "", // most recent bmu (to be highlighted at speed level 0)
    wheelStamp: 0,
    countDownVal: 0, // for counting down during autorestart
    colors: {
        adapt0: "#FF8888", // rosa
        adapt1: "#FFDDDD", // nearly white
        bg_2D: "white",//"#eeeeee",
        bg_2D_converged: "#FFFACD",//"#eeeeee",
        bg_3D: 0xffffff, //0xeeeeee,
        bg_grad0: "#AAAAFF", // bluish // background
        bg_grad1: "white",
        bmu: "red",
        clickActive: false,
        converged: "see below",
        distribution: "white",
        edge: "black",
        edge_3D: 0,
        field: "red",
        freeze: "blue",
        grabNeighbor: "white",
        inserted: "yellow",
        lbg_data: "black",
        node_2D: "#75f07d", //"yellow", //"#2E8B57", //"Lime",
        pd_2D: "#ddd",//"#faa",
        pd_3D: "#aaa",
        pd_3Dproj: "#ff6666",
        pd_grad0: "white", // distribution
        pd_grad1: "#FF5555", //redish
        pinged: "red",
        pingedNeighbor: "white",
        signal_3D: 0,
        trace: "red",
        txt_grad00: "magenta", // Model-Name
        txt_grad05: "blue",
        txt_grad10: "red",
        voronoi: "LightCoral"//"red", //"#777",
    }
};
glob.colors.converged = shadeBlend(0.0, glob.colors.node_2D);

var MAX_NODES = 1000;
var discSize = 3000;

//var drawNoOfSignalsPresented = true;
//var nodeColor = "green";
//var backgroundColor = "white";
var maxSignalsDrawn = 500;

var sigStore;
var doGlobalEdgeAging = true;
var debug = false;
var nn; // le net
var signalsPresented;
var signalsPresented_prev= 0;
var signalAtLastTrace = 0;
var sigsPerSecond = 0;
var timestamp = 0;
var timestamp_prev = 0;
var noOfRecentSignals = 0;
/* var colors = {
	stop: "#ff8080",  // light red
	start: "#79ff4d", // light green
}*/
var demoRun = 0;
var nodeid = 0; // to generate node ids
var edgeid = 0; // to generate edge ids
var spiraldata = [
    "................................................................",
    "................................................................",
    "................................................................",
    "..############################################################..",
    "..############################################################..",
    "..############################################################..",
    "..############################################################..",
    "..####....................................................####..",
    "..####....................................................####..",
    "..####....................................................####..",
    "..####....................................................####..",
    "..####....############################################....####..",
    "..####....############################################....####..",
    "..####....############################################....####..",
    "..####....############################################....####..",
    "..####....####....................................####....####..",
    "..####....####....................................####....####..",
    "..####....####....................................####....####..",
    "..####....####....................................####....####..",
    "..####....####....############################....####....####..",
    "..####....####....############################....####....####..",
    "..####....####....############################....####....####..",
    "..####....####....############################....####....####..",
    "..####....####....####....................####....####....####..",
    "..####....####....####....................####....####....####..",
    "..####....####....####....................####....####....####..",
    "..####....####....####....................####....####....####..",
    "..####....####....####....############....####....####....####..",
    "..####....####....####....############....####....####....####..",
    "..####....####....####....############....####....####....####..",
    "..####....####....####....############....####....####....####..",
    "..####....####....####....####....####....####....####....####..",
    "..####....####....####....####....####....####....####....####..",
    "..####....####....####....####....####....####....####....####..",
    "..####....####....####....####....####....####....####....####..",
    "..####....####....####....####....####....####....####....####..",
    "..####....####....####....####............####....####....####..",
    "..####....####....####....####............####....####....####..",
    "..####....####....####....####............####....####....####..",
    "..####....####....####....####............####....####....####..",
    "..####....####....####....####################....####....####..",
    "..####....####....####....####################....####....####..",
    "..####....####....####....####################....####....####..",
    "..####....####....####....####################....####....####..",
    "..####....####....####............................####....####..",
    "..####....####....####............................####....####..",
    "..####....####....####............................####....####..",
    "..####....####....####............................####....####..",
    "..####....####....####################################....####..",
    "..####....####....####################################....####..",
    "..####....####....####################################....####..",
    "..####....####....####################################....####..",
    "..####....####............................................####..",
    "..####....####............................................####..",
    "..####....####............................................####..",
    "..####....####............................................####..",
    "..####....####################################################..",
    "..####....####################################################..",
    "..####....####################################################..",
    "..####....####################################################..",
    "................................................................",
    "................................................................",
    "................................................................",
    "................................................................"
];
var clouddata = [
    "................................................................",
    "................................................................",
    "................................................................",
    "................................................................",
    "................................................................",
    "................................................................",
    "...............................................####.............",
    ".............................................########...........",
    "............#######.........................##########..........",
    "..........###########.......................###########.........",
    "........###############....................#############........",
    ".......#################.................###############........",
    "......########################..........#################.......",
    ".....############################....####################.......",
    "....######################################################......",
    "....######################################################......",
    "...#######################################################......",
    "...#######################################################......",
    "...#######################################################......",
    "...#######################################################......",
    "..########################################################......",
    "..#######################################################.......",
    "..#######################################################.......",
    "..#######################################################.......",
    "..#######################################################.......",
    "..########################################################......",
    "...########################################################.....",
    "...#########################################################....",
    "...##########################################################...",
    "...##########################################################...",
    "....#########################################################...",
    "....##########################################################..",
    ".....#########################################################..",
    "......########################################################..",
    ".......#######################################################..",
    "........######################################################..",
    ".........#####################################################..",
    "...........####################.....##########################..",
    "............###############...........########################..",
    ".............###########..............########################..",
    ".......................................######################...",
    ".......................................######################...",
    ".......................................######################...",
    ".......................................#####################....",
    ".......................................#####################....",
    "......................................######################....",
    "......................................#####################.....",
    "......................................#####################.....",
    "......................................####################......",
    ".......................................###################......",
    "........................................##################......",
    ".........................................###############........",
    ".........................................###############........",
    "..........................................#############.........",
    "............................................########............",
    "..............................................#####.............",
    "................................................................",
    "................................................................",
    "................................................................",
    "................................................................",
    "................................................................",
    "................................................................",
    "................................................................",
    "................................................................"
];
var cactusdata = [
    "................................................................",
    ".............#####..............................##..............",
    ".............#####............................#####.............",
    ".............######...........................#####.............",
    "............#######..........................######.............",
    "............########.........................#######............",
    "............########.........................#######............",
    "............########........................########............",
    "............#########.......................########............",
    ".............#########.....................#########............",
    ".............#########....................#########.............",
    ".............##########..................##########.............",
    "..............############..............###########.............",
    "...............##############.........############..............",
    "................#################################...............",
    ".................###############################................",
    "..................#############################.................",
    "...................############################.................",
    ".....................########################...................",
    ".......................#####################....................",
    ".........................################.......................",
    "............................########............................",
    "............................########............................",
    "............................########............##..............",
    "............................########...........####.............",
    "............................########...........#####............",
    "............................########..........######............",
    "............................########..........######............",
    "............................########.........#######............",
    ".............#####..........########.........######.............",
    ".............######.........########........#######.............",
    "............#######.........########.......########.............",
    "............#######.........########......########..............",
    "...........########.........######################..............",
    "...........########.........#####################...............",
    "...........#########........####################................",
    "...........#########........####################................",
    "............#########.......###################.................",
    "............##########......#################...................",
    ".............###########....##############......................",
    ".............############...########............................",
    "..............######################............................",
    "..............######################............................",
    "...............#####################............................",
    ".................###################............................",
    "..................##################............................",
    "....................################............................",
    ".....................###############............................",
    ".......................#############............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "............................########............................",
    "................................................................"];
// to make new PD:
//
// entry here
// entry in VBNN.draw
// entry in getSignalFromPD
// entry in html
var mfac = 22;
var shapeDepth = 0.2;
var pds = {
    "UnitSquare": {
        width: 1.0,
        yoff: 0,
        xoff: 0,
    },
    "SquareNonUniform": { // Thanks to Robert Haschke for contributing this
        width: 1,
        yoff: 0,
        xoff: 0
    },
    "DragMe": {
        width: 0.4,
        height: 0.2,
        xoff: 0.2,
        yoff: 0.7,
        xoff_m: 0, // mouse offset in rect
        yoff_m: 0, // mouse offset in rect
    },
    "Square-N": {
        width: 0.2,
        yoff: 0.4, // (1-0.2)/2
        xoff: 0,
    },
    "2Squares": {
        width: 0.5
    },
    "2OtherSquares": {
        width: 0.4
    },
    "Corners": {
        width: 0.4
    },
    "Corners-N": {
        width: 0.4
    },
    "H-Stripe": {
        height: 0.2,
        width: 1.0
    },
    "Line": {
        height: 0.001,
        width: 1.0
    },
    "H-Stripe-N": {
        height: 0.2,
        width: 1.0,
        xoff: 0.0,
        yoff: 0.0
    },
    /*
	"V-Stripe": {
		height: 1.0,
		width: 0.2,
		xoff: 0.0,
		yoff: 0.0,
	},
	"V-Stripe-N": {
		height: 1.0,
		width: 0.2,
		xoff: 0.0,
		yoff: 0.0,
	},
	*/
    "123-D": {
        boxw: 7 / mfac,
        boxl: 4 / mfac,
        boxh: 6 / mfac,
        rectl: 6 / mfac,
        rectw: 7 / mfac,
        linel: 6 / mfac,
        rad: 3 / mfac
    },
    "Circle": {
        radius: 0.45
    },
    "2-Circles": {
        radius: 0.20
    },
    "bigSmallCircle": {
        radius1: 0.02,
        radius2: 0.4,
    },
    "PulsingCircle-N": {
        radius: 0.05,
        realradius: 0.3
    },
    "Circle-N": {
        radius: 0.20,
        xoff: 0.0,
        yoff: 0.0,
    },
    "Ring": {
        radius: 0.45
    },
    /*
	"Donut": {
		radiusOuter: 0.47,
		radiusInner: 0.3
	},
	*/
    /*
	"Raster2": {
		n: 12,
		fields: {
			0:["*"],
			1:["*"],
			5:[10,11],
			6:[10,11],
			10:["*"],
			11:["*"],
		},
		xy: []
	},
	*/
    "Clusters": {
        n: 12,
        fields: {
            0: [1,3,7],
            1: [11],
            3: [2],
            5: [3,7],
            8: [11],
            10: [2],
            11: [10],
        },
        xy: []
    },
    "Clusters2": {
        n: 12,
        fields: {
            0: [0,11],
            11: [0,11],
        },
        xy: []
    },
    "Spiral": {
        rawdata: spiraldata,
        n: 12,
        depth: shapeDepth,
        zoff: 0.45,
        xy: []
    },
    "Clusters3": {
        n: 25,
        fields: {
            1: [2,17],
            8: [0,11,21],
            14: [0,21],
            20: [8,14,16],
        },
        xy: []
    },
    "Cactus": {
        rawdata: cactusdata,
        n: 12,
        depth: shapeDepth,
        zoff:0.45,
        xy: []
    },
    "Cloud": {
        rawdata: clouddata,
        n: 12,
        depth: shapeDepth,
        zoff:0.45,
        xy: []
    }
};

//
// monkey-patching str (endsWith n.a. in IE11)
//
String.prototype.startsWith = function(prefix) {
    return this.indexOf(prefix) === 0;
};

String.prototype.endsWith = function(suffix) {
    return this.match(suffix+"$") == suffix;
};
function isRotSym(pd){
    return
}
// returns true, if x is a member of the array arr
function isIn(x,arr) {
    return arr.indexOf(x) > -1
}
function setPDAttributes(){
    for (var p in pds) {
        var pd = pds[p];
        if (p === "123-D") {
            /*
			boxw: 0.5,
			boxl: 0.2,
			boxh: 0.2,
			rectl: 0.2,
			linel: 0.2,
			rad: 0.2		
			*/
            pd.xoff_box=(1-pd.boxl-pd.rectl-pd.linel-2*pd.rad)/2.0;
            pd.yoff_box = (1-pd.boxw)/2.0;
            pd.zoff_box = (1-pd.boxh)/2.0;

            pd.xoff_rect = pd.xoff_box+pd.boxl;
            pd.yoff_rect = (1-pd.boxw)/2.0;
            pd.zoff_rect = 0.5;

            pd.xoff_line = pd.xoff_rect+pd.rectl;
            pd.yoff_line = 0.5;
            pd.zoff_line = 0.5;

            pd.xoff_circle=pd.xoff_line+pd.linel+pd.rad;//center
            pd.yoff_circle=0.5;
            pd.zoff_circle=0.5;
            cl("Multi prepared");
            //cd(pd);
        }
        if (p.endsWith("-N")) {
            cl("non-stationary: "+p);
            pd.stationary = false;
        } else {
            cl("stationary: "+p);
            pd.stationary = true;
            //console.log("stationary: "+p);
        }
        pd.rotationSymmetric = isIn(p,["Circle","PulsingCircle-N","Circle-N","Ring","Donut"]);
    }
}
function resetRotation(){
    for (var p in pds) {
        pds[p].angle = 0.0;
        pds[p].ready = false; // enforces castPD
    }
}
function shadeBlend(p,c0,c1){
    var n=p<0?p*-1:p,u=Math.round,w=parseInt;
    if(c0.length>7){
        var f=c0.split(","),t=(c1?c1:p<0?"rgb(0,0,0)":"rgb(255,255,255)").split(","),R=w(f[0].slice(4)),G=w(f[1]),B=w(f[2]);
        return "rgb("+(u((w(t[0].slice(4))-R)*n)+R)+","+(u((w(t[1])-G)*n)+G)+","+(u((w(t[2])-B)*n)+B)+")"
    }else{
        var f=w(c0.slice(1),16),t=w((c1?c1:p<0?"#000000":"#FFFFFF").slice(1),16),R1=f>>16,G1=f>>8&0x00FF,B1=f&0x0000FF;
        return "#"+(0x1000000+(u(((t>>16)-R1)*n)+R1)*0x10000+(u(((t>>8&0x00FF)-G1)*n)+G1)*0x100+(u(((t&0x0000FF)-B1)*n)+B1)).toString(16).slice(1)
    }
}
setPDAttributes();
resetRotation();
